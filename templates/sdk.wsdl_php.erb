<%
#
#   Copyright 2013 PayPal Inc.
# 
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
# 
#       http://www.apache.org/licenses/LICENSE-2.0
# 
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
#
%>
<?php
namespace <%= package %>;
<% imports(data_type, schema, package, classname, "soap").each do |import| %>
use <%= import %>;
<% end %>
/**
<%= comment_wrap(data_type.description, 60, ' * ') %>
 */
class <%= valid_class_name(classname) %> extends <% if data_type.fault %>PPXmlFaultMessage<% else %>PPXmlMessage<% end %> {
<% const_args = {} %>  
<% type = data_type %>
<% while type %>
<% type.properties.each do |name, property| %>
<% vname = to_underscore(name) %>
<% vtype = get_php_type(property, schema, classname) %>
<% const_args[vname] = property.type if property.required %>
	/**
<%= comment_wrap(property.description, 60, "\t * ") %>
	<% if property.array %>
     * @array
	<% end %>
	 * @access public
	<% if (property.value != '1' and !property.attribute) and !should_qualify_name(property.package, schema) %>
	 * @namespace
	<% elsif property.package.present? %>
	 * @namespace <%= property.package %>
	<% end %>
	<% if property.attribute %>
	 * @attribute
	<% end %>
	<% if property.value == '1' %>
	 * @value
	<% end %>
	 * @var <%= "#{validated_package(schema.data_types[vtype].package)}\\" if schema.data_types[vtype] %><%= vtype %>
	<% if vname != property.name %>
	 * @name <%= property.name %>
	<% end %>
	 */
	public $<%= vname %>;
<% end %>
<% type = schema.data_types[type.extends] %>
<% end %>

<% if const_args.size > 0 %>

	/**
	 * Constructor with mandatory properties
	 *
<% const_args.map.each do |name, type| %>
     * @param <%= type %> $<%= name %>
<% end %>
	 */
	public function __construct(<%= const_args.map{|name, type| "$#{name} = NULL"}.join(", ") %>) {
<% const_args.each do |name, type| %>
        $this-><%= name %> = $<%= name %>;
<% end %>
    }
<% end %>

<%= render "templates/sdk.wsdlsoapserialize_php.erb", :classname => classname, :schema => schema, :data_type => data_type %>
}
